---
layout: default
title:  "cohesity分析"
date:   2016-06-02
categories: storage
---

cohesity刚刚创立的时候有过一些关注，只是那个时候他的官方网站几乎是一片空白，除了创始人那篇充满情怀的blog。

可惜找不到了，大意就是现在海量的数据爆发的时代，如何存放好这些数据，同时发掘出数据的价值没有任何玩家玩好。既然大家都玩不好，那么让我们来改变世界吧。

于是他从Nutanix（CTO）出来创立了cohesity，从在线的存储的Nutanix，改到二级存储的Cohesity，重点关注发掘数据的价值。而不仅仅是为支持业务提供傻的存储。

今天在登录网站，内容已经非常丰富，产品已经有不少客户了，大牛创业就是快。。不说一个存储要做好至少7年的么，人家咋这么快？

这不，这次已经有了[架构说明书](http://13554-presscdn-0-95.pagely.netdna-cdn.com/library/2015/10/Cohesity-Architecture-WhitePaper.pdf)，必须要分析下。

### 背景

一开始当然继续大谈情怀：

- 数据的不断爆发，使得用户们不再在现有的legacy的方案上不停的补充新的方案，打各种补丁，贴各种创可贴。造成很多问题

>1. 造成数据的孤岛，不同的系统中存在大量的相同数据
2. 进一步加剧了数据的爆发

看看当今企业的几个基本诉求：

- 保证商业的可持续性的存储，核心业务（想象银行如果没了数据会咋样）

>1. 需要保证数据一致可用，依赖容灾恢复之类的技术。
2. 企业一般会有一个主站点，以及一个standby的从站点，从站点基本不用，导致巨大的投资浪费。（容灾解决方案都是非常昂贵的）

- 通用的业务（开发测试，web主页，学习等各类支撑系统）

>1. 研发需要一个模拟真实环境的sandbox来验证，测试之类。
2. 一般研发环境和生产环境分离，那么又多一份冗余数据和一个个数据孤岛。想想我厂每个team都有众多的各种设备，浪费之严重，触目惊心啊。

- 数据分析业务（将IT从成本中心变成价值中心）

>1. 大数据已经喊了很多年，说的就是这块。
2. 从一大堆的数据里面，实时的分析出有价值的信息将会更加有利于帮助企业决策。
3. 比如我们team可以将应用的负载信息收集起来进行分析，帮助我们做技术决策，而不是像现在这样去YY客户的诉求。
4. 企业可以买强大同时支持在线业务和分析的高性能存储，或者使用一个data lake的解决方案（即把海量的数据往一个巨大的存储池扔）
5. 当今数据中心架构异常复杂，存放，管理，保护这些数据变得极其复杂，更别说去分析这些数据啦。
6. cohesity将企业存储分为2类，一类是在线业务的存储，一类是二级海量存储。

### 用cohesity让数据变得有序和优雅

cohesity是为了消除数据碎片，或者叫数据孤岛而设计的。让不停给IT系统打补丁的时代消失吧，cohesity生来就是为了构建世界上最有效最灵活的数据解决方案。商用硬件＋智能可扩展的软件。让CIO不用在考虑传统的存储如何满足未来的诉求，而是把目光集中在企业的核心业务上。

#### C2000系列平台

- C2300:48TB raw空间，3.2TB flash，2U
- C2500:95TB raw空间，6.4TB flash，2U
- block: 一个block支持4个node，一个C2300或者C2500就是一个block
- 每个node：2个8核V3的CPU，64RAM，2个10GE SFP＋网口，2个1GE网口，以及管理接口
- 扩展性：3节点起步，扩展到无限大，性能和容量都是线性扩展

## cohesity架构（cohesity称为OASIS）

cohesity的目标是实现一个无敌的，无限扩展的巨大文件系统，在文件系统之上能够轻易整合一些应用进来。内部天然支持下列应用（喜欢它把一切上层特性都叫做application，明确了cohesity的平台属性）：

- 数据保护
- 复制数据管理
- 测试开发devops
- 原生数据分析(inplace分析)
- 自带报表

![]({{ site.baseurl }}/assets/cohesity-1.png)

从架构来看分了四层：

- 最底层是它的盒子
- 通过分布式软件OASIS池化
 * OASIS leverages a purpose-built noSQL store, combined with Paxos protocols, that delivers full consistency with the ability to make decisions rapidly, at massive scale, and without performance penalties.
- 上层补充基本的存储服务
- 最上层根据业务特征，实现针对业务特征的数据服务

下面分别介绍各个层次：

### 1. OASIS
一个无限容量的巨大分布式文件系统，后端基于一个paxos的分布式Nosql DB。强一致，横向扩展，性能无损失。

包括以下几个组件：

1. 集群管理：
 - 控制所有集群中的各种服务：包括维护各个服务配置信息；网络信息；每个服务的状态信息；号称比当前开源解决方案性能更好，可靠性可用性更高。
2. I/O引擎
 - 负责IO路径
 - 包括SSD写cache，分级存储
 - 数据副本
 - 读操作需要从分布式元数据存储中获取元数据（即chunk的位置）
 - 热点数据放到SSD中
3. 元数据存储
 -  The Metadata Store is a consistent key value store 
 - 在增加或者删除节点的时候需要做负载均衡
 - 元数据用三副本
 - 从描述来看，元数据是实用独立的分布式NoSql，类似用cassandra之类的东东
4. Index引擎
 - 搞定数据分析的问题
 - 第一轮扫描：搞定high level的分析；VM名字，文件元数据之类
 - 第二轮扫描：扫描出VMDK中的一些文件信息
 - 自带索引能够快速的找到用户需要的信息，比如一个VM的所有信息
5. 集成的数据保护引擎
 - 提供一个原生的数据保护的环境
 - 能够与VMware的VADP对接,提供端到端的数据保护方案

### 2. 存储服务

![]({{ site.baseurl }}/assets/cohesity-2.png)

- 快照
 - 传统快照，快照多了之后会有性能下降，毕竟需要根据快照链追溯
 - chesty的专利技术：能否讲快照的回溯限定在有限的几跳以内。
 - 做到file粒度的快照，而不是FS粒度，细节如上图

![]({{ site.baseurl }}/assets/cohesity-3.png)
- 去重
 - 传统的厂商提供文件或者block粒度的去重能力，但是一般都是在单点效果好。
 - cohesity实现整个集群粒度的去重，允许用户配置是先去重，后去重，还是不去重。

![]({{ site.baseurl }}/assets/cohesity-4.png)
- 智能数据布局
 - 客户能自定义副本数
 - 数据切割成8K－24KB的chunk（这样架构一个小文件也能利用并发）

### 3. 应用环境

就像run在android的APP一样，chesty的平台也能支持不少App了，只是暂时这些app都是它自己开发的。

当前主要包括三个应用：数据保护，DevOps，分析。

- 数据保护
 - 无缝与VADP对接，无需再安装独立的
 - 特色还是基于它的快照技术来做

- DevOps
 - 通过快照技术能够快速的做出克隆
 - 克隆出来的东东可以给测试&开发来用，即保证开发测试与生产环境同一份数据

![]({{ site.baseurl }}/assets/cohesity-5.png)

- 分析
 - 存储利用率趋势，用户度量
 - 实时的性能统计，数据缩减率，IOPS，延迟等
 - 提供一个Analytics Workbench，能够让用户自己run code去分析数据，就像map-reduce那样。就像一个分布式的grep
