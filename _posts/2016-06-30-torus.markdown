---
layout: default
title:  "容器存储Torus分析"
date:   2016-06-30
categories: container
---

[文章link](http://dockone.io/article/1404)，我就不直接贴过来了。

＃ Torus存储是什么？

在众多开源存储中，Torus有哪些特点，目标是什么呢？

简单总结几个亮点：

1. 转为容器定制（容器volume 或者 容器镜像？）
2. 能够用K8S编排调度
3. 当前只是一个demo，希望借助社区力量壮大。
4. 利用了大量构建etcd的经验
5. 初心：可靠、分布式、简单
6. cloud-native而生

## 容器需要什么存储

容器需要什么存储，应该也是指跑在容器中的应用需要什么存储？
我们先来看看容器有哪些不同。

### 容器的特点
1. 容器粒度更小，更动态，随时创建和消亡
2. 坏几个容器无所谓，能够快速替换
3. 以微服务的方式启动、停止、升级

### Torus的设计思路
1. 分布式软件：支持分布式块和分布式对象存储，使用GO语言，使用gRPC，故客户端可以使用任何语言。可见他提供的是存储服务，需要通过gRPC客户端访问，绕过了传统的存储协议，简化了工作。
2. 易用：转为K8S平台设计，简化部署和运维
3. 准确：使用etcd来做元数据存储和检索（etcd性能满足要求么？）
4. 能缩放至上百节点

### Torus架构
先看看架构图：

![](http://dockerone.com/uploads/article/20160615/2347fe7241b59ce4fc6fc2c55c80fb66.png)

这段翻译太垃圾了，直接找原文。

几个特点：
1. 对外提供的是一个lib，看起来就像传统的FS，应该类似我们想做的libcloudfs。能够像文件一样去操作它。
2. 通过etcd来做协调和checkpoint，能够让这个文件lib以不同的方式展示给用户。看样子etcd是个核心组件。得部署看看。
3. 当前仅支持以网络块设备的形式挂在给应用，未来希望能支持对象（似乎是用文件lib去支持块和对象？）。
4. 当前已经支持一致性Hash，复制，GC，负载均衡等能力。未来希望支持加密和EC。

### 部署
这个地方应该是最大特色了：
1. 直接使用K8S部署和管理：相当于Torus就是K8S应用商店的一个应用
2. 一旦存储集群起来之后，就能按需的给容器存储存储服务
3. 对于pod中的应用，Torus就是一个传统的FS
4. demo过吧PostgreSQL database 跑在Torus提供的存储之上
5. 也能部署在K8S之外，方便不玩K8S的用户

## Torus的目标
1. 准备建立一个世界级的cloud-native分布式存储系统
2. 企业级Kubernetes的基础

## 小节

这个时候重启一个存储项目，感觉似乎晚了点，Ceph Rados也有GO的客户度，应该也会往容器生态去靠。

2个可能存在竞争关系，不过这个项目还是可以给我们提供不少参考的，直接从容器的角度去思考未来的业务以及未来的业务需要什么存储。